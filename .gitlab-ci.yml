stages:
  - build
  - build_docker
  - test

variables:
  MAVEN_OPTS: "-Dmaven.repo.local=.m2/repository"

cache:
  key: "${CI_COMMIT_REF_SLUG}"
  paths:
    - .m2/repository

build_backend:
  stage: build
  image: maven:3.9.2-eclipse-temurin-17
  script:
    - mvn clean install -DskipTests=true -e -X
  artifacts:
    paths:
      - target/*.jar

build_docker:
  stage: build_docker
  image: docker:20.10.16
  services:
    - docker:20.10.16-dind
  variables:
    DOCKER_HOST: tcp://docker:2375/
    DOCKER_TLS_CERTDIR: ""
  script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - docker build -t $CI_REGISTRY/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME:latest .
    - docker push $CI_REGISTRY/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME:latest

test_backend:
  stage: test
  image: maven:3.9.2-eclipse-temurin-17
  services:
    - name: postgres:14
      alias: postgres
    - name: minio/minio
      alias: minio
      command: ["server", "/data"]
  variables:
    POSTGRES_DB: lms
    POSTGRES_USER: postgres
    POSTGRES_PASSWORD: admin1234
    MINIO_ENDPOINT: "http://minio:9000"
    MINIO_ACCESS_KEY: "minioadmin"
    MINIO_SECRET_KEY: "minioadmin"
    SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/lms
    SPRING_DATASOURCE_USERNAME: postgres
    SPRING_DATASOURCE_PASSWORD: admin1234
    SPRING_JPA_HIBERNATE_DDL_AUTO: create-drop
  script:
    - apt-get update && apt-get install -y postgresql-client
    - echo "Attente de MinIO..."
    - until curl -s $MINIO_ENDPOINT; do sleep 3; done
    - echo "Attente de PostgreSQL..."
    - until pg_isready -h postgres -p 5432 -U postgres; do sleep 3; done
    - mvn test -e -X
