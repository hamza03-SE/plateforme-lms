stages:
  - build
  - build_docker
  - test
  - test_api

variables:
  MAVEN_OPTS: "-Dmaven.repo.local=.m2/repository"

cache:
  key: "${CI_COMMIT_REF_SLUG}"
  paths:
    - .m2/repository

build_backend:
  stage: build
  image: maven:3.9.2-eclipse-temurin-17
  script:
    - mvn clean install -DskipTests=true -e -X
  artifacts:
    paths:
      - target/*.jar

build_docker:
  stage: build_docker
  image: docker:20.10.16
  services:
    - docker:20.10.16-dind
  variables:
    DOCKER_HOST: tcp://docker:2375/
    DOCKER_TLS_CERTDIR: ""
  script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - docker build -t $CI_REGISTRY/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME:latest .
    - docker push $CI_REGISTRY/$CI_PROJECT_NAMESPACE/$CI_PROJECT_NAME:latest

test_backend:
  stage: test
  image: maven:3.9.2-eclipse-temurin-17
  services:
    - name: postgres:14
      alias: db
    - name: minio/minio
      alias: minio
      command: ["server", "/data", "--console-address", ":9001"]
  variables:
    SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/lms
    SPRING_DATASOURCE_USERNAME: postgres
    SPRING_DATASOURCE_PASSWORD: admin1234
    SPRING_JPA_HIBERNATE_DDL_AUTO: update
    MINIO_URL: http://minio:9000
    MINIO_ACCESS_KEY: minioadmin
    MINIO_SECRET_KEY: minioadmin
    POSTGRES_DB: lms
    POSTGRES_USER: postgres
    POSTGRES_PASSWORD: admin1234
  before_script:
    - echo "Waiting for PostgreSQL and MinIO..."
    - until pg_isready -h db -U postgres; do sleep 2; done
    - until curl -s http://minio:9000; do sleep 2; done
  script:
    - mvn test -e -X
  artifacts:
    reports:
      junit: target/surefire-reports/*.xml

test_api_newman:
  stage: test_api
  image: node:18
  services:
    - docker:dind
  variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_TLS_CERTDIR: ""
  before_script:
    - apk add --no-cache curl docker-cli
  script:
    - echo " Lancement de l'environnement Docker Compose..."
    - docker-compose -f docker-compose.yml up -d
    - echo "Attente du backend sur le port 8089..."
    - until curl -s http://localhost:8089/api/auth/login; do echo "⏳..."; sleep 5; done
    - echo "Backend prêt, installation de Newman..."
    - npm install -g newman
    - echo "Exécution des tests Newman..."
    - newman run postman/lms-newman-collection.json

